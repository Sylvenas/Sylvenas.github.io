{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/2021/01/06/network.html","result":{"data":{"markdownRemark":{"html":"<h2>cors</h2>\n<h3>简单请求</h3>\n<p>同时满足以下两个条件\n1.请求方法</p>\n<ul>\n<li>HEAD</li>\n<li>GET</li>\n<li>POST</li>\n</ul>\n<p>2.HTTP的头信息不超出以下几种字段：</p>\n<ul>\n<li>Accept</li>\n<li>Accept-Language</li>\n<li>Content-Language</li>\n<li>Last-Event-ID</li>\n<li>Content-Type：只限于三个值application/x-www-form-urlencoded、multipart/form-data、text/plain</li>\n</ul>\n<p>浏览器在发起请求的时候会携带 origin header,服务端判定是否在许可范围内，如果是，则 response 中包含<code class=\"language-text\">Access-Control-Allow-Origin</code>，浏览器会识别该字段准许通行，否则抛出错误</p>\n<h3>非简单请求</h3>\n<p>1.请求方法</p>\n<ul>\n<li>PUT</li>\n<li>DELETE</li>\n</ul>\n<p>2.HTTP的头以下几种字段：</p>\n<ul>\n<li>Content-Type：application/json</li>\n</ul>\n<p>非简单请求的CORS请求，会在正式通信之前，增加一次 HTTP 查询请求，称为\"预检\"请求（preflight）。</p>\n<p>\"预检\"请求用的请求方法是 <code class=\"language-text\">OPTIONS</code>，表示这个请求是用来询问的。头信息里面，关键字段是 <code class=\"language-text\">Origin</code>，表示请求来自哪个源。</p>\n<p>服务器收到\"预检\"请求以后，检查了 <code class=\"language-text\">Origin</code>、<code class=\"language-text\">Access-Control-Request-Method</code> 和<code class=\"language-text\">Access-Control-Request-Headers</code> 字段以后，确认允许跨源请求，就可以做出回应</p>\n<p>如果服务器否定了\"预检\"请求，会返回一个正常的HTTP回应，但是没有任何CORS相关的头信息字段。这时，浏览器就会认定，服务器不同意预检请求，因此触发一个错误，被XMLHttpRequest对象的onerror回调函数捕获。控制台会打印出如下的报错信息。</p>\n<p>一旦服务器通过了\"预检\"请求，以后每次浏览器正常的CORS请求，就都跟简单请求一样，会有一个Origin头信息字段。服务器的回应，也都会有一个Access-Control-Allow-Origin头信息字段。</p>","excerpt":"cors 简单请求 同时满足以下两个条件\n1.请求方法 HEAD GET POST 2.HTTP的头信息不超出以下几种字段： Accept Accept-Language Content-Language Last-Event-ID Content-Type：只限于三个值application/x-www-form-urlencoded、multipart/form-data、text/plain 浏览器在发起请求的时候会携带 origin header…","fields":{"slug":"/blog/2021/01/06/network.html","date":"January 05, 2021"},"frontmatter":{"title":"network","img":"./img/2015-03-25.jpg","author":["Sylvenas"],"categories":"code"}}},"pageContext":{"slug":"/blog/2021/01/06/network.html"}},"staticQueryHashes":[]}