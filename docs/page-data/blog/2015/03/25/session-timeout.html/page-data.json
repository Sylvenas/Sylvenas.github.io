{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/2015/03/25/session-timeout.html","result":{"data":{"markdownRemark":{"html":"<h3>1.问题重新</h3>\n<p>通过ajax请求后端数据的时候，如果后端返回的状态吗是302，则约定为登陆过期，需要跳转到登录页，重新登录，前端代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">axios<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">// 判断登录状态是否过期</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>result <span class=\"token operator\">==</span> <span class=\"token number\">302</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token comment\">//跳转到登陆界面</span>\r\n        <span class=\"token comment\">//...</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>这个逻辑看上去没有问题，但是在IE浏览器下会出现BUG,现象是跳转到登录页，登陆之后，会再次调转到登录页，问题的原因就在于，IE浏览器缓存了上次的get请求的返回值，那么就会进入是否过期的判断，然后就会再次跳转到登录页。</p>\n<h3>2.解决方案</h3>\n<h4>1.axios</h4>\n<p>给每一个get请求增加一个时间戳,在axios请求之前进行添加</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"> axios<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>method <span class=\"token operator\">===</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> date<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">return</span> config<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">// Do something with request error </span>\r\n    <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>2.jQuery</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">$<span class=\"token punctuation\">.</span><span class=\"token function\">ajaxSetup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n    cache<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>","excerpt":"1.问题重新 通过ajax请求后端数据的时候，如果后端返回的状态吗是302，则约定为登陆过期，需要跳转到登录页，重新登录，前端代码如下： 这个逻辑看上去没有问题，但是在IE浏览器下会出现BUG,现象是跳转到登录页，登陆之后，会再次调转到登录页，问题的原因就在于，IE浏览器缓存了上次的get请求的返回值，那么就会进入是否过期的判断，然后就会再次跳转到登录页。 2.解决方案 1.axios 给每一个get请求增加一个时间戳,在axios请求之前进行添加 2.jQuery","fields":{"slug":"/blog/2015/03/25/session-timeout.html","date":"March 24, 2015"},"frontmatter":{"title":"Ajax call when session time out","img":"./img/2015-03-25.jpg","author":["Sylvenas"],"categories":"http"}}},"pageContext":{"slug":"/blog/2015/03/25/session-timeout.html"}},"staticQueryHashes":[]}