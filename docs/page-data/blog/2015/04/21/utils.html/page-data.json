{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/2015/04/21/utils.html","result":{"data":{"markdownRemark":{"html":"<h3>web front download file by url</h3>\n<p>最常见的场景为前端点击下载按钮，请求后端接口，后端返回一个uri,然后前端负责下载，方法如下</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/**\n * 根据文件地址和文件名下载文件\n * @param {String} uri\n * @param {String} name\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">downloadURI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">uri<span class=\"token punctuation\">,</span>name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> link <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    link<span class=\"token punctuation\">.</span>download <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    link<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> uri<span class=\"token punctuation\">;</span>\n\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    link<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    link <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>获取元素相对于浏览器的left&#x26;top的位置</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/**\n * 获取元素相对于浏览器的left&amp;top位置\n * @param {HTMLElement} node \n * @returns {left:number,top:number}\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getOffset</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> box <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> docElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n\t\tleft<span class=\"token operator\">:</span> box<span class=\"token punctuation\">.</span>left <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>pageXOffset <span class=\"token operator\">||</span> docElem<span class=\"token punctuation\">.</span>scrollLeft<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>\n\t\t\t<span class=\"token punctuation\">(</span>docElem<span class=\"token punctuation\">.</span>clientLeft <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>clientLeft <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\ttop<span class=\"token operator\">:</span> box<span class=\"token punctuation\">.</span>top <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>pageYOffset <span class=\"token operator\">||</span> docElem<span class=\"token punctuation\">.</span>scrollTop<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>\n\t\t\t<span class=\"token punctuation\">(</span>docElem<span class=\"token punctuation\">.</span>clientTop <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>clientTop <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>判断元素是否在可是区域内</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/**\n * @param {HTMLElement} el \n * @returns {bool}\n*/</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">isElementInViewport</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> rect <span class=\"token operator\">=</span> el<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        rect<span class=\"token punctuation\">.</span>top <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span>\n        rect<span class=\"token punctuation\">.</span>left <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span>\n        rect<span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">&lt;=</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>innerHeight <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>clientHeight<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n        rect<span class=\"token punctuation\">.</span>right <span class=\"token operator\">&lt;=</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>innerWidth <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>clientWidth<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>前端异步打开新的网页</h3>\n<p>经常遇到需要用户点击按钮，然后请求数据，然后打开新标签页的情况，例如：文件预览，由于浏览器的安全限制，不能在异步(ajax)代码中做页面跳转,例如下面的代码：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"> <span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token string\">'...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://www.google.com'</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>很明显浏览器会拦截新标签页的打开，那么该怎么解决这个问题呢？</p>\n<ul>\n<li>异步之前先打开，然后重定向</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> newPage <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'_blank'</span><span class=\"token punctuation\">)</span>\n\najax<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    newPage<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> <span class=\"token string\">'https://www.google.com'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>动态创建a标签,只能在当前页打开</li>\n</ul>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://unpkg.com/axios/dist/axios.min.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> link <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// link.setAttribute('target','_blank')</span></span>    link<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> <span class=\"token string\">'http://www.baidu.com'</span><span class=\"token punctuation\">;</span>\n\n    link<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>但是注意上面的第四行代码，如果加上<code class=\"language-text\">target='_blank'</code>属性的话，那么也会被浏览器拦截，所以这个方法有一定的缺陷</p>\n<ul>\n<li>把异步请求改成同步，这个已经改变问题的主旨了不建议使用</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> success <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\najax<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    async<span class=\"token operator\">:</span><span class=\"token boolean\">false</span>\n    <span class=\"token comment\">// ....</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    success <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>success<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://baidu.com'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","excerpt":"web front download file by url 最常见的场景为前端点击下载按钮，请求后端接口，后端返回一个uri,然后前端负责下载，方法如下 获取元素相对于浏览器的left&top的位置 判断元素是否在可是区域内 前端异步打开新的网页 经常遇到需要用户点击按钮，然后请求数据，然后打开新标签页的情况，例如：文件预览，由于浏览器的安全限制，不能在异步(ajax…","fields":{"slug":"/blog/2015/04/21/utils.html","date":"2015-04-20T16:00:00.000Z"},"frontmatter":{"title":"常用小工具代码集合","img":"./img/2015-04-21.jpg","author":["sylvenas"],"categories":"Design"}}},"pageContext":{"slug":"/blog/2015/04/21/utils.html"}},"staticQueryHashes":[]}