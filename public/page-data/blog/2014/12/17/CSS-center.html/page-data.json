{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/2014/12/17/CSS-center.html","result":{"data":{"markdownRemark":{"html":"<h3>水平居中</h3>\n<h4>子元素是行内元素(inline)或者inline-block, inline-table, inline-flex</h4>\n<p>父元素直接设置<code class=\"language-text\">text-align:center</code></p>\n<h4>子元素是块级元素</h4>\n<ul>\n<li>\n<p>子元素直接设置<code class=\"language-text\">margin:0 auto;</code></p>\n</li>\n<li>\n<p>父元素设置<code class=\"language-text\">position:relative</code>,子元素设置<code class=\"language-text\">position: absolute;left: 50%;transform: translateX(-50%);</code></p>\n</li>\n</ul>\n<blockquote>\n<p>注意这个时候需要子元素需要设置一个宽度(如果子元素不设置宽度的话，块级元素的宽度将是100%，也就不需要所谓的水平居中了)</p>\n</blockquote>\n<h4>多个块级子元素</h4>\n<p>如果有多个块级子元素需要居中对齐，最好的方法就是把多个子元素全部设置为<code class=\"language-text\">display:inline-block</code>,然后父元素设置<code class=\"language-text\">text-align:center</code></p>\n<h3>垂直居中</h3>\n<h4>子元素是行内元素(inline)或者inline-block, inline-table, inline-flex</h4>\n<ul>\n<li>单行(一行能够摆开)：父元素的line-height设置为和height的值一样,其实这个是利用<code class=\"language-text\">line box</code>的<a href=\"\">垂直居中行</a>来实现的。</li>\n</ul>\n<p>先说一个大家都熟知的现象，有一个空的div，<code class=\"language-text\">&lt;div>&lt;/div></code>，如果没有设置至少大于1像素高度height值时，该div的高度就是个0。如果该div里面打入了一个空格或是文字，则此div就会有一个高度。那么您思考过没有，为什么div里面有文字后就会有高度呢？</p>\n<p>这是个看上去很简单的问题，是理解<code class=\"language-text\">line-height</code>非常重要的一个问题。可能有人会跟认为是：文字撑开的！文字占据空间，自然将div撑开。我一开始也是这样理解的，但是事实上，深入理解inline模型后，我发现，根本不是文字撑开了div的高度，而是<code class=\"language-text\">line-height</code>。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n    <span class=\"token selector\">.test1</span><span class=\"token punctuation\">{</span><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>20px<span class=\"token punctuation\">;</span> <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span>0<span class=\"token punctuation\">;</span> <span class=\"token property\">border</span><span class=\"token punctuation\">:</span>1px solid #ccc<span class=\"token punctuation\">;</span> <span class=\"token property\">background</span><span class=\"token punctuation\">:</span>#eee<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n    <span class=\"token selector\">.test2</span><span class=\"token punctuation\">{</span><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>0<span class=\"token punctuation\">;</span> <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span>20px<span class=\"token punctuation\">;</span> <span class=\"token property\">border</span><span class=\"token punctuation\">:</span>1px solid #ccc<span class=\"token punctuation\">;</span> <span class=\"token property\">background</span><span class=\"token punctuation\">:</span>#eee<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>  \n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>hello world<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>测试<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>上面的代码的结果是怎么样的呢？</p>\n<div style=\"text-align:center;margin-top:20px\" align=\"center\">\n  <img style=\"height:200px;\" src=\"../images/line-height.jpeg\" />\n</div>  \n<p>是不是很震惊，可以看到test1的文字<code class=\"language-text\">font-size:20px</code>,文字虽然现实出来了，但是隐式行内框<code class=\"language-text\">hello world</code>的外层div元素的高度却是0；而test2的文字<code class=\"language-text\">font-size:0</code>，文字没有显示出来，但是隐式行内框<code class=\"language-text\">hello world</code>却把外层div元素的高度撑起来了。</p>\n<p>本质上的原因是行框的高度是由<code class=\"language-text\">line-height</code>来决定的，而不是行内元素的<code class=\"language-text\">height</code>决定的，更不是由行内的文字高度决定的。</p>\n<p>其实<code class=\"language-text\">line boxes</code>不是直接的生产者，属于中层干部，真正的活儿都是它的手下 – <code class=\"language-text\">inline boxes</code>干的，这些手下就是文字啦，图片啊，<code class=\"language-text\">&lt;span></code>之类的inline属性的标签啦。<code class=\"language-text\">line boxes</code>只是个考察汇报人员，考察它的手下谁的实际<code class=\"language-text\">line-height</code>值最高，谁最高，它就要谁的值，然后向上汇报，形成高度。例如，<code class=\"language-text\">&lt;span style=\"line-height:20px;\">取手下line-height&lt;span style=\"line-height:40px;\">最高&lt;/span>的值&lt;/span></code>。则line boxes的高度就是40像素了。</p>\n<p>由上面的知识可以推导出，如果父元素内只有一个<code class=\"language-text\">inline-*</code>元素，那么只要把父元素的<code class=\"language-text\">line-height</code>设置为和<code class=\"language-text\">height</code>的值一样即可。(实质上这种情况下，父元素的height的值已经没用了，因为line-height具有继承性，也就是说子元素的line-height也被设置为了和父元素一样的行高，父元素的高度是由子元素撑起来的，这个时候父元素的height已经没有存在的价值了)</p>\n<ul>\n<li>多行</li>\n</ul>\n<p>如果行内元素要占据多行的情况下，则稍微麻烦一点，可以使用老式的table布局，不过这个实在是太out了。</p>\n<p>现在来说最为时尚的做法是使用伪元素，使用一个100%高度的伪元素进行一个占位，然后让行内元素相对于改伪元素进行垂直居中看代码：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n<span class=\"token selector\">.ghost-center</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 240px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">resize</span><span class=\"token punctuation\">:</span> vertical<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.ghost-center::before</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 1%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">vertical-align</span><span class=\"token punctuation\">:</span> middle<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.ghost-center span</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">vertical-align</span><span class=\"token punctuation\">:</span> middle<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 190px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> rebeccapurple<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ghost-center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>\n        I'm vertically centered multiple lines of text in a container. Centered with a ghost pseudoelement\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h4>子元素是已知高度的块级元素</h4>\n<p>这种情况是最简单的，一般思路是父元素先使用绝对定位，把子元素的左上角拉到父元素的中间位置，然后使用<code class=\"language-text\">负margin</code>,<code class=\"language-text\">translateY</code>,等等把子元素往上拉一半的高度：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.parent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.child</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> -50px<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* account for padding and border if not using box-sizing: border-box; */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>子元素是未知高度的块级元素</h4>\n<p>其实这个时候整体思路上和上面的是一样的，不同的地方在于，这种情况下不能再使用<code class=\"language-text\">负margin-top</code>来把元素拉上去，因为没法设定margin-top的具体的值，更不能用百分比，因为margin的百分比是相对于父元素的宽度而言的，这个时候只能用相对于自身高度的<code class=\"language-text\">translateY</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.parent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.child</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateY</span><span class=\"token punctuation\">(</span>-50%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>conclusion</h3>\n<p>以上边上常用的水平垂直居中对齐的各种方案，一般能够应付常见的业务场景了。不过用现在浏览器兼容性的程度来说，<code class=\"language-text\">flex box</code>会是更简单方便的方案了。</p>","excerpt":"水平居中 子元素是行内元素(inline)或者inline-block, inline-table, inline-flex 父元素直接设置 子元素是块级元素 子元素直接设置 父元素设置,子元素设置 注意这个时候需要子元素需要设置一个宽度(如果子元素不设置宽度的话，块级元素的宽度将是100%，也就不需要所谓的水平居中了) 多个块级子元素 如果有多个块级子元素需要居中对齐，最好的方法就是把多个子元素全部设置为,然后父元素设置 垂直居中 子元素是行内元素(inline)或者inline-block…","fields":{"slug":"/blog/2014/12/17/CSS-center.html","date":"2014-12-16T16:00:00.000Z"},"frontmatter":{"title":"CSS实现元素水平垂直居中","img":"./img/2014-12-17.jpg","author":["sylvenas"],"categories":"CSS"}}},"pageContext":{"slug":"/blog/2014/12/17/CSS-center.html"}},"staticQueryHashes":[]}